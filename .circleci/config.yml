
jobs:
  # Lint the application to check any build/syntax errors
  build-application:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies and hadolint
          command: |
            cd azure-vote
            make install

      - run:
          name: Lint the application
          command: |
            cd azure-vote
            make lint 
  # Build new image and push to the Dockerhub  
  push-images:
    machine: true
    steps:
      - checkout
      - run: |
          cd azure-vote 
          docker build . -t sudkul/voting-app-frontend:latest          
          docker image ls
          echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
          docker push sudkul/voting-app-frontend:latest


  # Assuming the CircleCI project has the following AWS variables saved.
  # AWS_ACCESS_KEY_ID, AWS_DEFAULT_REGION, AWS_SECRET_ACCESS_KEY
  deploy-application:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Deploy voting app to the cluster
          command: |
            kubectl get services
            ls -l
            kubectl apply -f voting-app.yaml
            kubectl get pods,svc,deployments
            
  
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0
version: 2.1
workflows:
  deployment:
    jobs:
      #- build-application
      #- deploy-application
      - push-images
      #- deploy-application:
      #    cluster-name: my-eks-demo
